/**
 * Autogenerated by Avro
 * <p>
 * DO NOT EDIT DIRECTLY
 */
package com.jordanupmc.publisher.dto;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@org.apache.avro.specific.AvroGenerated
public class PacketCarTelemetryDataDTO extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
    private static final long serialVersionUID = -9202421714871814850L;


    public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PacketCarTelemetryDataDTO\",\"namespace\":\"com.jordanupmc.publisher.dto\",\"fields\":[{\"name\":\"buttonStatus\",\"type\":\"long\"},{\"name\":\"carTelem\",\"type\":{\"type\":\"record\",\"name\":\"CarTelemetryData\",\"fields\":[{\"name\":\"brake\",\"type\":\"float\"},{\"name\":\"brakesTemperature\",\"type\":{\"type\":\"array\",\"items\":\"int\",\"java-class\":\"java.util.List\"}},{\"name\":\"clutch\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"}},{\"name\":\"drs\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"}},{\"name\":\"engineRPM\",\"type\":\"int\"},{\"name\":\"engineTemperature\",\"type\":\"int\"},{\"name\":\"gear\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Byte\"}},{\"name\":\"revLightsPercent\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"}},{\"name\":\"speed\",\"type\":\"int\"},{\"name\":\"steer\",\"type\":\"float\"},{\"name\":\"surfaceType\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"java-class\":\"java.util.List\"}},{\"name\":\"throttle\",\"type\":\"float\"},{\"name\":\"tyresInnerTemperature\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"java-class\":\"java.util.List\"}},{\"name\":\"tyresPressure\",\"type\":{\"type\":\"array\",\"items\":\"float\",\"java-class\":\"java.util.List\"}},{\"name\":\"tyresSurfaceTemperature\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"},\"java-class\":\"java.util.List\"}}]}},{\"name\":\"header\",\"type\":{\"type\":\"record\",\"name\":\"PacketHeader\",\"fields\":[{\"name\":\"frameIdentifier\",\"type\":\"long\"},{\"name\":\"gameMajorVersion\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"}},{\"name\":\"gameMinorVersion\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"}},{\"name\":\"packetFormat\",\"type\":\"int\"},{\"name\":\"packetId\",\"type\":{\"type\":\"enum\",\"name\":\"PacketId\",\"symbols\":[\"MOTION\",\"SESSION\",\"LAP_DATA\",\"EVENT\",\"PARTICIPANTS\",\"CAR_SETUPS\",\"CAR_TELEMETRY\",\"CAR_STATUS\",\"FINAL_CLASSIFICATION\",\"LOBBY_INFO\",\"CAR_DAMAGE\",\"SESSION_HISTORY\"]}},{\"name\":\"packetVersion\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"}},{\"name\":\"playerCarIndex\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"}},{\"name\":\"secondaryPlayerCarIndex\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"}},{\"name\":\"sessionTime\",\"type\":\"float\"},{\"name\":\"sessionUID\",\"type\":{\"type\":\"string\",\"java-class\":\"java.math.BigInteger\"}}]}},{\"name\":\"mfdPanelIndex\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"}},{\"name\":\"mfdPanelIndexSecondaryPlayer\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"}},{\"name\":\"uggestedGear\",\"type\":{\"type\":\"int\",\"java-class\":\"java.lang.Short\"}}]}");

    public static org.apache.avro.Schema getClassSchema() {
        return SCHEMA$;
    }

    private static final SpecificData MODEL$ = new SpecificData();

    private static final BinaryMessageEncoder<PacketCarTelemetryDataDTO> ENCODER =
            new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

    private static final BinaryMessageDecoder<PacketCarTelemetryDataDTO> DECODER =
            new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

    /**
     * Return the BinaryMessageEncoder instance used by this class.
     * @return the message encoder used by this class
     */
    public static BinaryMessageEncoder<PacketCarTelemetryDataDTO> getEncoder() {
        return ENCODER;
    }

    /**
     * Return the BinaryMessageDecoder instance used by this class.
     * @return the message decoder used by this class
     */
    public static BinaryMessageDecoder<PacketCarTelemetryDataDTO> getDecoder() {
        return DECODER;
    }

    /**
     * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
     * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
     * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
     */
    public static BinaryMessageDecoder<PacketCarTelemetryDataDTO> createDecoder(SchemaStore resolver) {
        return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
    }

    /**
     * Serializes this PacketCarTelemetryDataDTO to a ByteBuffer.
     * @return a buffer holding the serialized data for this instance
     * @throws java.io.IOException if this instance could not be serialized
     */
    public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
        return ENCODER.encode(this);
    }

    /**
     * Deserializes a PacketCarTelemetryDataDTO from a ByteBuffer.
     * @param b a byte buffer holding serialized data for an instance of this class
     * @return a PacketCarTelemetryDataDTO instance decoded from the given buffer
     * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
     */
    public static PacketCarTelemetryDataDTO fromByteBuffer(
            java.nio.ByteBuffer b) throws java.io.IOException {
        return DECODER.decode(b);
    }

    private long buttonStatus;
    private com.jordanupmc.publisher.dto.CarTelemetryData carTelem;
    private com.jordanupmc.publisher.dto.PacketHeader header;
    private int mfdPanelIndex;
    private int mfdPanelIndexSecondaryPlayer;
    private int uggestedGear;

    /**
     * Default constructor.  Note that this does not initialize fields
     * to their default values from the schema.  If that is desired then
     * one should use <code>newBuilder()</code>.
     */
    public PacketCarTelemetryDataDTO() {
    }

    /**
     * All-args constructor.
     * @param buttonStatus The new value for buttonStatus
     * @param carTelem The new value for carTelem
     * @param header The new value for header
     * @param mfdPanelIndex The new value for mfdPanelIndex
     * @param mfdPanelIndexSecondaryPlayer The new value for mfdPanelIndexSecondaryPlayer
     * @param uggestedGear The new value for uggestedGear
     */
    public PacketCarTelemetryDataDTO(java.lang.Long buttonStatus, com.jordanupmc.publisher.dto.CarTelemetryData carTelem, com.jordanupmc.publisher.dto.PacketHeader header, java.lang.Integer mfdPanelIndex, java.lang.Integer mfdPanelIndexSecondaryPlayer, java.lang.Integer uggestedGear) {
        this.buttonStatus = buttonStatus;
        this.carTelem = carTelem;
        this.header = header;
        this.mfdPanelIndex = mfdPanelIndex;
        this.mfdPanelIndexSecondaryPlayer = mfdPanelIndexSecondaryPlayer;
        this.uggestedGear = uggestedGear;
    }

    @Override
    public org.apache.avro.specific.SpecificData getSpecificData() {
        return MODEL$;
    }

    @Override
    public org.apache.avro.Schema getSchema() {
        return SCHEMA$;
    }

    // Used by DatumWriter.  Applications should not call.
    @Override
    public java.lang.Object get(int field$) {
        switch (field$) {
            case 0:
                return buttonStatus;
            case 1:
                return carTelem;
            case 2:
                return header;
            case 3:
                return mfdPanelIndex;
            case 4:
                return mfdPanelIndexSecondaryPlayer;
            case 5:
                return uggestedGear;
            default:
                throw new IndexOutOfBoundsException("Invalid index: " + field$);
        }
    }

    // Used by DatumReader.  Applications should not call.
    @Override
    @SuppressWarnings(value = "unchecked")
    public void put(int field$, java.lang.Object value$) {
        switch (field$) {
            case 0:
                buttonStatus = (java.lang.Long) value$;
                break;
            case 1:
                carTelem = (com.jordanupmc.publisher.dto.CarTelemetryData) value$;
                break;
            case 2:
                header = (com.jordanupmc.publisher.dto.PacketHeader) value$;
                break;
            case 3:
                mfdPanelIndex = (java.lang.Integer) value$;
                break;
            case 4:
                mfdPanelIndexSecondaryPlayer = (java.lang.Integer) value$;
                break;
            case 5:
                uggestedGear = (java.lang.Integer) value$;
                break;
            default:
                throw new IndexOutOfBoundsException("Invalid index: " + field$);
        }
    }

    /**
     * Gets the value of the 'buttonStatus' field.
     * @return The value of the 'buttonStatus' field.
     */
    public long getButtonStatus() {
        return buttonStatus;
    }


    /**
     * Sets the value of the 'buttonStatus' field.
     * @param value the value to set.
     */
    public void setButtonStatus(long value) {
        this.buttonStatus = value;
    }

    /**
     * Gets the value of the 'carTelem' field.
     * @return The value of the 'carTelem' field.
     */
    public com.jordanupmc.publisher.dto.CarTelemetryData getCarTelem() {
        return carTelem;
    }


    /**
     * Sets the value of the 'carTelem' field.
     * @param value the value to set.
     */
    public void setCarTelem(com.jordanupmc.publisher.dto.CarTelemetryData value) {
        this.carTelem = value;
    }

    /**
     * Gets the value of the 'header' field.
     * @return The value of the 'header' field.
     */
    public com.jordanupmc.publisher.dto.PacketHeader getHeader() {
        return header;
    }


    /**
     * Sets the value of the 'header' field.
     * @param value the value to set.
     */
    public void setHeader(com.jordanupmc.publisher.dto.PacketHeader value) {
        this.header = value;
    }

    /**
     * Gets the value of the 'mfdPanelIndex' field.
     * @return The value of the 'mfdPanelIndex' field.
     */
    public int getMfdPanelIndex() {
        return mfdPanelIndex;
    }


    /**
     * Sets the value of the 'mfdPanelIndex' field.
     * @param value the value to set.
     */
    public void setMfdPanelIndex(int value) {
        this.mfdPanelIndex = value;
    }

    /**
     * Gets the value of the 'mfdPanelIndexSecondaryPlayer' field.
     * @return The value of the 'mfdPanelIndexSecondaryPlayer' field.
     */
    public int getMfdPanelIndexSecondaryPlayer() {
        return mfdPanelIndexSecondaryPlayer;
    }


    /**
     * Sets the value of the 'mfdPanelIndexSecondaryPlayer' field.
     * @param value the value to set.
     */
    public void setMfdPanelIndexSecondaryPlayer(int value) {
        this.mfdPanelIndexSecondaryPlayer = value;
    }

    /**
     * Gets the value of the 'uggestedGear' field.
     * @return The value of the 'uggestedGear' field.
     */
    public int getUggestedGear() {
        return uggestedGear;
    }


    /**
     * Sets the value of the 'uggestedGear' field.
     * @param value the value to set.
     */
    public void setUggestedGear(int value) {
        this.uggestedGear = value;
    }

    /**
     * Creates a new PacketCarTelemetryDataDTO RecordBuilder.
     * @return A new PacketCarTelemetryDataDTO RecordBuilder
     */
    public static com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder newBuilder() {
        return new com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder();
    }

    /**
     * Creates a new PacketCarTelemetryDataDTO RecordBuilder by copying an existing Builder.
     * @param other The existing builder to copy.
     * @return A new PacketCarTelemetryDataDTO RecordBuilder
     */
    public static com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder newBuilder(com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder other) {
        if (other == null) {
            return new com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder();
        } else {
            return new com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder(other);
        }
    }

    /**
     * Creates a new PacketCarTelemetryDataDTO RecordBuilder by copying an existing PacketCarTelemetryDataDTO instance.
     * @param other The existing instance to copy.
     * @return A new PacketCarTelemetryDataDTO RecordBuilder
     */
    public static com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder newBuilder(com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO other) {
        if (other == null) {
            return new com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder();
        } else {
            return new com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder(other);
        }
    }

    /**
     * RecordBuilder for PacketCarTelemetryDataDTO instances.
     */
    @org.apache.avro.specific.AvroGenerated
    public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PacketCarTelemetryDataDTO>
            implements org.apache.avro.data.RecordBuilder<PacketCarTelemetryDataDTO> {

        private long buttonStatus;
        private com.jordanupmc.publisher.dto.CarTelemetryData carTelem;
        private com.jordanupmc.publisher.dto.CarTelemetryData.Builder carTelemBuilder;
        private com.jordanupmc.publisher.dto.PacketHeader header;
        private com.jordanupmc.publisher.dto.PacketHeader.Builder headerBuilder;
        private int mfdPanelIndex;
        private int mfdPanelIndexSecondaryPlayer;
        private int uggestedGear;

        /** Creates a new Builder */
        private Builder() {
            super(SCHEMA$, MODEL$);
        }

        /**
         * Creates a Builder by copying an existing Builder.
         * @param other The existing Builder to copy.
         */
        private Builder(com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder other) {
            super(other);
            if (isValidValue(fields()[0], other.buttonStatus)) {
                this.buttonStatus = data().deepCopy(fields()[0].schema(), other.buttonStatus);
                fieldSetFlags()[0] = other.fieldSetFlags()[0];
            }
            if (isValidValue(fields()[1], other.carTelem)) {
                this.carTelem = data().deepCopy(fields()[1].schema(), other.carTelem);
                fieldSetFlags()[1] = other.fieldSetFlags()[1];
            }
            if (other.hasCarTelemBuilder()) {
                this.carTelemBuilder = com.jordanupmc.publisher.dto.CarTelemetryData.newBuilder(other.getCarTelemBuilder());
            }
            if (isValidValue(fields()[2], other.header)) {
                this.header = data().deepCopy(fields()[2].schema(), other.header);
                fieldSetFlags()[2] = other.fieldSetFlags()[2];
            }
            if (other.hasHeaderBuilder()) {
                this.headerBuilder = com.jordanupmc.publisher.dto.PacketHeader.newBuilder(other.getHeaderBuilder());
            }
            if (isValidValue(fields()[3], other.mfdPanelIndex)) {
                this.mfdPanelIndex = data().deepCopy(fields()[3].schema(), other.mfdPanelIndex);
                fieldSetFlags()[3] = other.fieldSetFlags()[3];
            }
            if (isValidValue(fields()[4], other.mfdPanelIndexSecondaryPlayer)) {
                this.mfdPanelIndexSecondaryPlayer = data().deepCopy(fields()[4].schema(), other.mfdPanelIndexSecondaryPlayer);
                fieldSetFlags()[4] = other.fieldSetFlags()[4];
            }
            if (isValidValue(fields()[5], other.uggestedGear)) {
                this.uggestedGear = data().deepCopy(fields()[5].schema(), other.uggestedGear);
                fieldSetFlags()[5] = other.fieldSetFlags()[5];
            }
        }

        /**
         * Creates a Builder by copying an existing PacketCarTelemetryDataDTO instance
         * @param other The existing instance to copy.
         */
        private Builder(com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO other) {
            super(SCHEMA$, MODEL$);
            if (isValidValue(fields()[0], other.buttonStatus)) {
                this.buttonStatus = data().deepCopy(fields()[0].schema(), other.buttonStatus);
                fieldSetFlags()[0] = true;
            }
            if (isValidValue(fields()[1], other.carTelem)) {
                this.carTelem = data().deepCopy(fields()[1].schema(), other.carTelem);
                fieldSetFlags()[1] = true;
            }
            this.carTelemBuilder = null;
            if (isValidValue(fields()[2], other.header)) {
                this.header = data().deepCopy(fields()[2].schema(), other.header);
                fieldSetFlags()[2] = true;
            }
            this.headerBuilder = null;
            if (isValidValue(fields()[3], other.mfdPanelIndex)) {
                this.mfdPanelIndex = data().deepCopy(fields()[3].schema(), other.mfdPanelIndex);
                fieldSetFlags()[3] = true;
            }
            if (isValidValue(fields()[4], other.mfdPanelIndexSecondaryPlayer)) {
                this.mfdPanelIndexSecondaryPlayer = data().deepCopy(fields()[4].schema(), other.mfdPanelIndexSecondaryPlayer);
                fieldSetFlags()[4] = true;
            }
            if (isValidValue(fields()[5], other.uggestedGear)) {
                this.uggestedGear = data().deepCopy(fields()[5].schema(), other.uggestedGear);
                fieldSetFlags()[5] = true;
            }
        }

        /**
         * Gets the value of the 'buttonStatus' field.
         * @return The value.
         */
        public long getButtonStatus() {
            return buttonStatus;
        }


        /**
         * Sets the value of the 'buttonStatus' field.
         * @param value The value of 'buttonStatus'.
         * @return This builder.
         */
        public com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder setButtonStatus(long value) {
            validate(fields()[0], value);
            this.buttonStatus = value;
            fieldSetFlags()[0] = true;
            return this;
        }

        /**
         * Checks whether the 'buttonStatus' field has been set.
         * @return True if the 'buttonStatus' field has been set, false otherwise.
         */
        public boolean hasButtonStatus() {
            return fieldSetFlags()[0];
        }


        /**
         * Clears the value of the 'buttonStatus' field.
         * @return This builder.
         */
        public com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder clearButtonStatus() {
            fieldSetFlags()[0] = false;
            return this;
        }

        /**
         * Gets the value of the 'carTelem' field.
         * @return The value.
         */
        public com.jordanupmc.publisher.dto.CarTelemetryData getCarTelem() {
            return carTelem;
        }


        /**
         * Sets the value of the 'carTelem' field.
         * @param value The value of 'carTelem'.
         * @return This builder.
         */
        public com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder setCarTelem(com.jordanupmc.publisher.dto.CarTelemetryData value) {
            validate(fields()[1], value);
            this.carTelemBuilder = null;
            this.carTelem = value;
            fieldSetFlags()[1] = true;
            return this;
        }

        /**
         * Checks whether the 'carTelem' field has been set.
         * @return True if the 'carTelem' field has been set, false otherwise.
         */
        public boolean hasCarTelem() {
            return fieldSetFlags()[1];
        }

        /**
         * Gets the Builder instance for the 'carTelem' field and creates one if it doesn't exist yet.
         * @return This builder.
         */
        public com.jordanupmc.publisher.dto.CarTelemetryData.Builder getCarTelemBuilder() {
            if (carTelemBuilder == null) {
                if (hasCarTelem()) {
                    setCarTelemBuilder(com.jordanupmc.publisher.dto.CarTelemetryData.newBuilder(carTelem));
                } else {
                    setCarTelemBuilder(com.jordanupmc.publisher.dto.CarTelemetryData.newBuilder());
                }
            }
            return carTelemBuilder;
        }

        /**
         * Sets the Builder instance for the 'carTelem' field
         * @param value The builder instance that must be set.
         * @return This builder.
         */

        public com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder setCarTelemBuilder(com.jordanupmc.publisher.dto.CarTelemetryData.Builder value) {
            clearCarTelem();
            carTelemBuilder = value;
            return this;
        }

        /**
         * Checks whether the 'carTelem' field has an active Builder instance
         * @return True if the 'carTelem' field has an active Builder instance
         */
        public boolean hasCarTelemBuilder() {
            return carTelemBuilder != null;
        }

        /**
         * Clears the value of the 'carTelem' field.
         * @return This builder.
         */
        public com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder clearCarTelem() {
            carTelem = null;
            carTelemBuilder = null;
            fieldSetFlags()[1] = false;
            return this;
        }

        /**
         * Gets the value of the 'header' field.
         * @return The value.
         */
        public com.jordanupmc.publisher.dto.PacketHeader getHeader() {
            return header;
        }


        /**
         * Sets the value of the 'header' field.
         * @param value The value of 'header'.
         * @return This builder.
         */
        public com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder setHeader(com.jordanupmc.publisher.dto.PacketHeader value) {
            validate(fields()[2], value);
            this.headerBuilder = null;
            this.header = value;
            fieldSetFlags()[2] = true;
            return this;
        }

        /**
         * Checks whether the 'header' field has been set.
         * @return True if the 'header' field has been set, false otherwise.
         */
        public boolean hasHeader() {
            return fieldSetFlags()[2];
        }

        /**
         * Gets the Builder instance for the 'header' field and creates one if it doesn't exist yet.
         * @return This builder.
         */
        public com.jordanupmc.publisher.dto.PacketHeader.Builder getHeaderBuilder() {
            if (headerBuilder == null) {
                if (hasHeader()) {
                    setHeaderBuilder(com.jordanupmc.publisher.dto.PacketHeader.newBuilder(header));
                } else {
                    setHeaderBuilder(com.jordanupmc.publisher.dto.PacketHeader.newBuilder());
                }
            }
            return headerBuilder;
        }

        /**
         * Sets the Builder instance for the 'header' field
         * @param value The builder instance that must be set.
         * @return This builder.
         */

        public com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder setHeaderBuilder(com.jordanupmc.publisher.dto.PacketHeader.Builder value) {
            clearHeader();
            headerBuilder = value;
            return this;
        }

        /**
         * Checks whether the 'header' field has an active Builder instance
         * @return True if the 'header' field has an active Builder instance
         */
        public boolean hasHeaderBuilder() {
            return headerBuilder != null;
        }

        /**
         * Clears the value of the 'header' field.
         * @return This builder.
         */
        public com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder clearHeader() {
            header = null;
            headerBuilder = null;
            fieldSetFlags()[2] = false;
            return this;
        }

        /**
         * Gets the value of the 'mfdPanelIndex' field.
         * @return The value.
         */
        public int getMfdPanelIndex() {
            return mfdPanelIndex;
        }


        /**
         * Sets the value of the 'mfdPanelIndex' field.
         * @param value The value of 'mfdPanelIndex'.
         * @return This builder.
         */
        public com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder setMfdPanelIndex(int value) {
            validate(fields()[3], value);
            this.mfdPanelIndex = value;
            fieldSetFlags()[3] = true;
            return this;
        }

        /**
         * Checks whether the 'mfdPanelIndex' field has been set.
         * @return True if the 'mfdPanelIndex' field has been set, false otherwise.
         */
        public boolean hasMfdPanelIndex() {
            return fieldSetFlags()[3];
        }


        /**
         * Clears the value of the 'mfdPanelIndex' field.
         * @return This builder.
         */
        public com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder clearMfdPanelIndex() {
            fieldSetFlags()[3] = false;
            return this;
        }

        /**
         * Gets the value of the 'mfdPanelIndexSecondaryPlayer' field.
         * @return The value.
         */
        public int getMfdPanelIndexSecondaryPlayer() {
            return mfdPanelIndexSecondaryPlayer;
        }


        /**
         * Sets the value of the 'mfdPanelIndexSecondaryPlayer' field.
         * @param value The value of 'mfdPanelIndexSecondaryPlayer'.
         * @return This builder.
         */
        public com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder setMfdPanelIndexSecondaryPlayer(int value) {
            validate(fields()[4], value);
            this.mfdPanelIndexSecondaryPlayer = value;
            fieldSetFlags()[4] = true;
            return this;
        }

        /**
         * Checks whether the 'mfdPanelIndexSecondaryPlayer' field has been set.
         * @return True if the 'mfdPanelIndexSecondaryPlayer' field has been set, false otherwise.
         */
        public boolean hasMfdPanelIndexSecondaryPlayer() {
            return fieldSetFlags()[4];
        }


        /**
         * Clears the value of the 'mfdPanelIndexSecondaryPlayer' field.
         * @return This builder.
         */
        public com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder clearMfdPanelIndexSecondaryPlayer() {
            fieldSetFlags()[4] = false;
            return this;
        }

        /**
         * Gets the value of the 'uggestedGear' field.
         * @return The value.
         */
        public int getUggestedGear() {
            return uggestedGear;
        }


        /**
         * Sets the value of the 'uggestedGear' field.
         * @param value The value of 'uggestedGear'.
         * @return This builder.
         */
        public com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder setUggestedGear(int value) {
            validate(fields()[5], value);
            this.uggestedGear = value;
            fieldSetFlags()[5] = true;
            return this;
        }

        /**
         * Checks whether the 'uggestedGear' field has been set.
         * @return True if the 'uggestedGear' field has been set, false otherwise.
         */
        public boolean hasUggestedGear() {
            return fieldSetFlags()[5];
        }


        /**
         * Clears the value of the 'uggestedGear' field.
         * @return This builder.
         */
        public com.jordanupmc.publisher.dto.PacketCarTelemetryDataDTO.Builder clearUggestedGear() {
            fieldSetFlags()[5] = false;
            return this;
        }

        @Override
        @SuppressWarnings("unchecked")
        public PacketCarTelemetryDataDTO build() {
            try {
                PacketCarTelemetryDataDTO record = new PacketCarTelemetryDataDTO();
                record.buttonStatus = fieldSetFlags()[0] ? this.buttonStatus : (java.lang.Long) defaultValue(fields()[0]);
                if (carTelemBuilder != null) {
                    try {
                        record.carTelem = this.carTelemBuilder.build();
                    } catch (org.apache.avro.AvroMissingFieldException e) {
                        e.addParentField(record.getSchema().getField("carTelem"));
                        throw e;
                    }
                } else {
                    record.carTelem = fieldSetFlags()[1] ? this.carTelem : (com.jordanupmc.publisher.dto.CarTelemetryData) defaultValue(fields()[1]);
                }
                if (headerBuilder != null) {
                    try {
                        record.header = this.headerBuilder.build();
                    } catch (org.apache.avro.AvroMissingFieldException e) {
                        e.addParentField(record.getSchema().getField("header"));
                        throw e;
                    }
                } else {
                    record.header = fieldSetFlags()[2] ? this.header : (com.jordanupmc.publisher.dto.PacketHeader) defaultValue(fields()[2]);
                }
                record.mfdPanelIndex = fieldSetFlags()[3] ? this.mfdPanelIndex : (java.lang.Integer) defaultValue(fields()[3]);
                record.mfdPanelIndexSecondaryPlayer = fieldSetFlags()[4] ? this.mfdPanelIndexSecondaryPlayer : (java.lang.Integer) defaultValue(fields()[4]);
                record.uggestedGear = fieldSetFlags()[5] ? this.uggestedGear : (java.lang.Integer) defaultValue(fields()[5]);
                return record;
            } catch (org.apache.avro.AvroMissingFieldException e) {
                throw e;
            } catch (java.lang.Exception e) {
                throw new org.apache.avro.AvroRuntimeException(e);
            }
        }
    }

    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumWriter<PacketCarTelemetryDataDTO>
            WRITER$ = (org.apache.avro.io.DatumWriter<PacketCarTelemetryDataDTO>) MODEL$.createDatumWriter(SCHEMA$);

    @Override
    public void writeExternal(java.io.ObjectOutput out)
            throws java.io.IOException {
        WRITER$.write(this, SpecificData.getEncoder(out));
    }

    @SuppressWarnings("unchecked")
    private static final org.apache.avro.io.DatumReader<PacketCarTelemetryDataDTO>
            READER$ = (org.apache.avro.io.DatumReader<PacketCarTelemetryDataDTO>) MODEL$.createDatumReader(SCHEMA$);

    @Override
    public void readExternal(java.io.ObjectInput in)
            throws java.io.IOException {
        READER$.read(this, SpecificData.getDecoder(in));
    }

    @Override
    protected boolean hasCustomCoders() {
        return true;
    }

    @Override
    public void customEncode(org.apache.avro.io.Encoder out)
            throws java.io.IOException {
        out.writeLong(this.buttonStatus);

        this.carTelem.customEncode(out);

        this.header.customEncode(out);

        out.writeInt(this.mfdPanelIndex);

        out.writeInt(this.mfdPanelIndexSecondaryPlayer);

        out.writeInt(this.uggestedGear);

    }

    @Override
    public void customDecode(org.apache.avro.io.ResolvingDecoder in)
            throws java.io.IOException {
        org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
        if (fieldOrder == null) {
            this.buttonStatus = in.readLong();

            if (this.carTelem == null) {
                this.carTelem = new com.jordanupmc.publisher.dto.CarTelemetryData();
            }
            this.carTelem.customDecode(in);

            if (this.header == null) {
                this.header = new com.jordanupmc.publisher.dto.PacketHeader();
            }
            this.header.customDecode(in);

            this.mfdPanelIndex = in.readInt();

            this.mfdPanelIndexSecondaryPlayer = in.readInt();

            this.uggestedGear = in.readInt();

        } else {
            for (int i = 0; i < 6; i++) {
                switch (fieldOrder[i].pos()) {
                    case 0:
                        this.buttonStatus = in.readLong();
                        break;

                    case 1:
                        if (this.carTelem == null) {
                            this.carTelem = new com.jordanupmc.publisher.dto.CarTelemetryData();
                        }
                        this.carTelem.customDecode(in);
                        break;

                    case 2:
                        if (this.header == null) {
                            this.header = new com.jordanupmc.publisher.dto.PacketHeader();
                        }
                        this.header.customDecode(in);
                        break;

                    case 3:
                        this.mfdPanelIndex = in.readInt();
                        break;

                    case 4:
                        this.mfdPanelIndexSecondaryPlayer = in.readInt();
                        break;

                    case 5:
                        this.uggestedGear = in.readInt();
                        break;

                    default:
                        throw new java.io.IOException("Corrupt ResolvingDecoder.");
                }
            }
        }
    }
}










